name: UPS Toolkit CI & Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  simulate-usb-devices:
    name: USB Detection Simulation
    runs-on: ubuntu-latest

    steps:
      - name: Simulate multiple CyberPower USB devices
        run: |
          mkdir -p /tmp/sysbus/devices/mock1
          echo "CyberPower UPS 1" > /tmp/sysbus/devices/mock1/product
          
          mkdir -p /tmp/sysbus/devices/mock2
          echo "CyberPower UPS 2" > /tmp/sysbus/devices/mock2/product

          mkdir -p /tmp/sysbus/devices/unrelated
          echo "Webcam" > /tmp/sysbus/devices/unrelated/product

      - name: Create and run detection script
        run: |
          echo '#!/bin/sh' > detect_usb.sh
          echo 'for devpath in /tmp/sysbus/devices/*; do' >> detect_usb.sh
          echo '  if [ -f "$devpath/product" ] && grep -iq "cyberpower" "$devpath/product"; then' >> detect_usb.sh
          echo '    echo "Detected: $(basename "$devpath")"' >> detect_usb.sh
          echo '  fi' >> detect_usb.sh
          echo 'done' >> detect_usb.sh
          chmod +x detect_usb.sh
          ./detect_usb.sh | grep -q mock && echo "::notice ::USB detection succeeded" || exit 1

  notify-slack:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: simulate-usb-devices
    if: always()

    steps:
      - name: Send Slack notification
        run: |
          STATUS="${{ needs.simulate-usb-devices.result }}"
          SHA="${{ github.sha }}"
          JOB_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          MSG=""

          if [[ "$STATUS" == "success" ]]; then
            MSG="✅ *USB Detection Passed*\nCommit: \`$SHA\`\n<$JOB_URL|View Workflow Run>"
          else
            MSG="❌ *USB Detection Failed*\nCommit: \`$SHA\`\n<$JOB_URL|View Workflow Run>"
          fi

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\": \"$MSG\"}" \
            "${{ secrets.SLACK_WEBHOOK_URL }}"

  docker-deploy:
    name: Docker Build & Deploy
    runs-on: ubuntu-latest
    needs: simulate-usb-devices
    if: ${{ needs.simulate-usb-devices.result == 'success' }}

    steps:
      - name: Set up Dockerfile
        run: |
          echo "FROM debian:bullseye" > Dockerfile
          echo "RUN apt update && apt install -y usbutils curl jq" >> Dockerfile
          echo "COPY . /app" >> Dockerfile
          echo "WORKDIR /app" >> Dockerfile
          echo "CMD [\"/bin/bash\"]" >> Dockerfile

      - name: Build Docker image
        run: |
          docker build -t ups-toolkit:latest .

      - name: Simulate Docker deploy
        run: |
          echo "Simulating container deployment..."
          docker run --rm ups-toolkit:latest bash -c "echo Running UPS tool in container"

  shell-deploy:
    name: Local Shell Deployment
    runs-on: ubuntu-latest
    needs: simulate-usb-devices
    if: ${{ needs.simulate-usb-devices.result == 'success' }}

    steps:
      - name: Deploy to simulated production
        run: |
          echo "Deploying UPS scripts to production folder..."
          mkdir -p /tmp/production
          echo "Deployed from commit ${{ github.sha }} at $(date)" > /tmp/production/deploy.log
